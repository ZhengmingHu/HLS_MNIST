==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.359 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.944 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.086 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.903 seconds; current allocated memory: 191.904 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.872 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.9 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.905 seconds; current allocated memory: 191.904 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.971 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.869 seconds; current allocated memory: 191.904 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.745 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.915 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.547 seconds; current allocated memory: 191.878 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.997 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.127 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.902 seconds; current allocated memory: 191.904 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.092 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.902 seconds; current allocated memory: 191.905 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.062 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.297 seconds; current allocated memory: 191.871 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.104 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.25 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.165 seconds; current allocated memory: 191.871 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.246 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.997 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.253 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.092 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.007 seconds; current allocated memory: 191.904 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.19 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.096 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.919 seconds; current allocated memory: 191.872 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.894 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.924 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.051 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.363 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.284 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.073 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.005 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.156 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.504 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.143 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.873 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.99 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.03 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.061 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.979 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.918 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.107 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.178 seconds; current allocated memory: 191.825 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.33 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.556 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.19 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.286 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.159 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.144 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.106 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.065 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.885 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.138 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.387 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.229 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.986 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.223 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.316 seconds; current allocated memory: 191.830 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] CSim failed with errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.286 seconds; current allocated memory: 191.830 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.514 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.005 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.07 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.258 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.121 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.992 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.235 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.231 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.606 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.443 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.427 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.453 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.075 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.977 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.362 seconds; current allocated memory: 191.874 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.269 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.303 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.445 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.035 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.948 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.819 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.526 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.862 seconds; current allocated memory: 191.840 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.213 seconds; current allocated memory: 191.840 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.723 seconds; current allocated memory: 191.826 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.406 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
WARNING: [HLS 207-989] '__LENET5__' is used as a header guard here, followed by #define of a different macro: src/LeNet5.h:1:9
INFO: [HLS 207-923] '__LENET5_H__' is defined here; did you mean '__LENET5__'?: src/LeNet5.h:2:9
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 8.982 seconds; current allocated memory: 193.361 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 7.137 seconds; current allocated memory: 196.734 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 196.735 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 210.153 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.259 seconds; current allocated memory: 228.386 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.578 seconds; current allocated memory: 269.196 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.403 seconds; current allocated memory: 281.557 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 282.386 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.33 seconds; current allocated memory: 283.386 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.368 seconds; current allocated memory: 283.815 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 284.551 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.357 seconds; current allocated memory: 286.949 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.644 seconds; current allocated memory: 291.677 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.857 seconds; current allocated memory: 301.460 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 23.066 seconds; current allocated memory: 302.183 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 24.704 seconds; peak allocated memory: 971.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.064 seconds; current allocated memory: 191.858 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.422 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.622 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.215 seconds; current allocated memory: 196.669 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 196.670 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 210.088 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 228.322 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.572 seconds; current allocated memory: 269.131 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.397 seconds; current allocated memory: 281.493 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.289 seconds; current allocated memory: 282.321 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.336 seconds; current allocated memory: 283.321 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.371 seconds; current allocated memory: 283.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 284.457 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.332 seconds; current allocated memory: 286.900 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.665 seconds; current allocated memory: 291.584 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.914 seconds; current allocated memory: 301.411 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 14.75 seconds; current allocated memory: 302.150 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.455 seconds; peak allocated memory: 971.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.329 seconds; current allocated memory: 195.494 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 8.429 seconds; current allocated memory: 195.503 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.406 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.715 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.26 seconds; current allocated memory: 196.669 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 196.670 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 210.088 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.264 seconds; current allocated memory: 228.322 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.579 seconds; current allocated memory: 269.131 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.399 seconds; current allocated memory: 281.522 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.31 seconds; current allocated memory: 282.351 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.358 seconds; current allocated memory: 283.350 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.361 seconds; current allocated memory: 283.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.247 seconds; current allocated memory: 284.458 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.348 seconds; current allocated memory: 286.900 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.659 seconds; current allocated memory: 291.584 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.875 seconds; current allocated memory: 301.425 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 14.926 seconds; current allocated memory: 302.150 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.682 seconds; peak allocated memory: 971.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.579 seconds; current allocated memory: 195.503 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.406 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.639 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.331 seconds; current allocated memory: 196.669 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 196.670 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.161 seconds; current allocated memory: 210.088 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.259 seconds; current allocated memory: 228.322 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.567 seconds; current allocated memory: 269.131 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.388 seconds; current allocated memory: 281.522 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.294 seconds; current allocated memory: 282.351 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.336 seconds; current allocated memory: 283.351 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.355 seconds; current allocated memory: 283.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.253 seconds; current allocated memory: 284.458 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.352 seconds; current allocated memory: 286.900 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.659 seconds; current allocated memory: 291.584 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.903 seconds; current allocated memory: 301.425 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.882 seconds; current allocated memory: 302.150 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.6 seconds; peak allocated memory: 971.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.406 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.635 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.204 seconds; current allocated memory: 196.669 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 196.670 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.162 seconds; current allocated memory: 210.088 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.254 seconds; current allocated memory: 228.322 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.592 seconds; current allocated memory: 269.131 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.399 seconds; current allocated memory: 281.522 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.292 seconds; current allocated memory: 282.351 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.364 seconds; current allocated memory: 283.351 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.367 seconds; current allocated memory: 283.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 284.458 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.349 seconds; current allocated memory: 286.900 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.67 seconds; current allocated memory: 291.584 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.915 seconds; current allocated memory: 301.425 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.85 seconds; current allocated memory: 302.150 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.569 seconds; peak allocated memory: 971.406 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 10.069 seconds; current allocated memory: 195.503 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
ERROR: [HLS 207-2161] 'fpga_foot_print_hint' attribute parameter 0 is out of bounds [0, 2147483647]: src/LeNet5.cpp:85:9
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.691 seconds; current allocated memory: 193.214 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 5.425 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.067 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
ERROR: [HLS 207-2161] 'fpga_foot_print_hint' attribute parameter 0 is out of bounds [0, 2147483647]: src/LeNet5.cpp:85:9
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.671 seconds; current allocated memory: 193.214 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 5.391 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.638 seconds; current allocated memory: 193.234 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.273 seconds; current allocated memory: 196.686 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 196.686 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 210.104 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 228.338 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.576 seconds; current allocated memory: 269.147 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.391 seconds; current allocated memory: 281.538 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.284 seconds; current allocated memory: 282.367 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.349 seconds; current allocated memory: 283.367 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.361 seconds; current allocated memory: 283.766 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 284.474 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.346 seconds; current allocated memory: 286.916 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.655 seconds; current allocated memory: 291.659 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.826 seconds; current allocated memory: 301.442 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.752 seconds; current allocated memory: 302.151 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.473 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.612 seconds; current allocated memory: 193.234 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.112 seconds; current allocated memory: 196.686 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 196.686 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 210.104 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 228.338 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.582 seconds; current allocated memory: 269.147 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.39 seconds; current allocated memory: 281.538 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 282.367 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.338 seconds; current allocated memory: 283.367 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.36 seconds; current allocated memory: 283.766 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 284.474 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.337 seconds; current allocated memory: 286.916 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.643 seconds; current allocated memory: 291.659 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.821 seconds; current allocated memory: 301.442 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 14.519 seconds; current allocated memory: 302.151 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.22 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 8.669 seconds; current allocated memory: 195.581 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.066 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.848 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:84:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:84:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:84:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.006 seconds; current allocated memory: 196.651 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 196.652 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.156 seconds; current allocated memory: 208.454 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.238 seconds; current allocated memory: 225.343 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.511 seconds; current allocated memory: 262.553 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.311 seconds; current allocated memory: 274.964 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln6_2) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln6_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln6) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 6, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.157 seconds; current allocated memory: 275.210 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.184 seconds; current allocated memory: 275.517 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.205 seconds; current allocated memory: 275.745 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 276.122 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.197 seconds; current allocated memory: 276.848 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 'ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 'ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 'ap_ctrl_hs'.
WARNING: [RTGEN 206-101] Port 'lenet5/CHout_pool0' has no fanin or fanout and is left dangling.
               Please use C simulation to confirm this function argument can be read from or written to.
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 278.339 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.93 seconds; current allocated memory: 285.411 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 141.84 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 14.624 seconds; current allocated memory: 285.675 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.637 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 12.217 seconds; current allocated memory: 195.060 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.069 seconds; current allocated memory: 971.407 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.241 seconds; current allocated memory: 193.219 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.823 seconds; current allocated memory: 196.701 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 196.702 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 210.120 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.294 seconds; current allocated memory: 228.354 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.667 seconds; current allocated memory: 269.163 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.446 seconds; current allocated memory: 281.554 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.346 seconds; current allocated memory: 282.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.406 seconds; current allocated memory: 283.382 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.434 seconds; current allocated memory: 283.782 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 284.490 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.432 seconds; current allocated memory: 286.932 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.785 seconds; current allocated memory: 291.674 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.414 seconds; current allocated memory: 301.442 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 17.185 seconds; current allocated memory: 302.151 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 19.218 seconds; peak allocated memory: 971.407 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 12.011 seconds; current allocated memory: 195.581 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.755 seconds; current allocated memory: 191.921 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.991 seconds; current allocated memory: 191.921 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.464 seconds; current allocated memory: 191.921 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.077 seconds; current allocated memory: 971.422 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.346 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.886 seconds; current allocated memory: 196.684 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 196.685 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 210.104 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.292 seconds; current allocated memory: 228.333 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.668 seconds; current allocated memory: 269.141 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.451 seconds; current allocated memory: 281.404 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 21, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.313 seconds; current allocated memory: 282.187 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.372 seconds; current allocated memory: 283.120 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.402 seconds; current allocated memory: 283.549 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.285 seconds; current allocated memory: 284.256 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.383 seconds; current allocated memory: 286.489 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.74 seconds; current allocated memory: 291.020 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32s_32s_32_1_1_Multiplier_4'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.071 seconds; current allocated memory: 300.200 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 16.847 seconds; current allocated memory: 300.954 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 1 seconds. Total elapsed time: 18.898 seconds; peak allocated memory: 971.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 10.938 seconds; current allocated memory: 195.566 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.674 seconds; current allocated memory: 191.921 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.991 seconds; current allocated memory: 191.921 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 971.422 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.601 seconds; current allocated memory: 193.218 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.191 seconds; current allocated memory: 196.684 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 196.685 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.159 seconds; current allocated memory: 210.103 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 228.333 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.556 seconds; current allocated memory: 269.141 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.399 seconds; current allocated memory: 281.403 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_33) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 21, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.269 seconds; current allocated memory: 282.186 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.308 seconds; current allocated memory: 283.119 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.339 seconds; current allocated memory: 283.548 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.24 seconds; current allocated memory: 284.256 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.32 seconds; current allocated memory: 286.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.604 seconds; current allocated memory: 291.020 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32s_32s_32_1_1_Multiplier_4'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 2.515 seconds; current allocated memory: 300.200 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.133 seconds; current allocated memory: 300.954 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 15.759 seconds; peak allocated memory: 971.422 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: export_design -rtl verilog -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file LeNet5_hls_proj/solution1/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 27.975 seconds; current allocated memory: 200.825 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 8.678 seconds; current allocated memory: 195.663 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.962 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.053 seconds; current allocated memory: 191.970 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.629 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.201 seconds; current allocated memory: 196.738 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 196.739 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 210.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 228.390 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.598 seconds; current allocated memory: 269.200 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.387 seconds; current allocated memory: 281.619 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.293 seconds; current allocated memory: 282.448 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.338 seconds; current allocated memory: 283.448 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.372 seconds; current allocated memory: 283.877 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.247 seconds; current allocated memory: 284.584 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.353 seconds; current allocated memory: 287.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.668 seconds; current allocated memory: 291.711 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.875 seconds; current allocated memory: 301.507 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.773 seconds; current allocated memory: 302.246 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.498 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 191.855 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.354 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.653 seconds; current allocated memory: 196.738 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 196.739 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 210.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 228.390 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.619 seconds; current allocated memory: 269.199 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.419 seconds; current allocated memory: 281.619 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.34 seconds; current allocated memory: 282.448 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.338 seconds; current allocated memory: 283.448 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.367 seconds; current allocated memory: 283.847 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.251 seconds; current allocated memory: 284.584 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.345 seconds; current allocated memory: 287.027 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.651 seconds; current allocated memory: 291.711 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.977 seconds; current allocated memory: 301.507 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 16.157 seconds; current allocated memory: 302.246 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 18.168 seconds; peak allocated memory: 301.507 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: export_design -rtl verilog -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file LeNet5_hls_proj/solution1/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 19.918 seconds; current allocated memory: 201.384 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 8.562 seconds; current allocated memory: 195.647 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.454 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
ERROR: [HLS 207-740] invalid suffix 'port' on integer constant: src/LeNet5.cpp:83:42
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.821 seconds; current allocated memory: 193.292 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 5.575 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
ERROR: [HLS 207-740] invalid suffix 'port' on integer constant: src/LeNet5.cpp:83:42
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.995 seconds; current allocated memory: 193.308 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 5.736 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.769 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.431 seconds; current allocated memory: 196.738 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 196.738 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.169 seconds; current allocated memory: 210.156 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.263 seconds; current allocated memory: 228.390 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv.1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.597 seconds; current allocated memory: 269.199 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20:27) in function 'conv'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.405 seconds; current allocated memory: 281.619 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound65) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound7) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln29_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i_i52_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_35) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_6) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_4_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_25_4_VITIS_LOOP_26_5_VITIS_LOOP_30_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.307 seconds; current allocated memory: 282.448 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.353 seconds; current allocated memory: 283.447 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln878) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 13, loop 'VITIS_LOOP_57_1_VITIS_LOOP_58_2_VITIS_LOOP_59_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.378 seconds; current allocated memory: 283.877 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.248 seconds; current allocated memory: 284.584 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_15ns_16ns_47ns_47_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16s_31_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.354 seconds; current allocated memory: 287.026 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.686 seconds; current allocated memory: 291.711 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.061 seconds; current allocated memory: 301.507 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 15.41 seconds; current allocated memory: 302.246 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 17.168 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.685 seconds; current allocated memory: 195.647 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 971.457 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.689 seconds; current allocated memory: 193.297 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:107:5)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.425 seconds; current allocated memory: 196.767 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 196.768 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 210.187 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.253 seconds; current allocated memory: 228.422 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lenet5' (src/LeNet5.cpp:75).
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv' (src/LeNet5.cpp:12:24).
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.606 seconds; current allocated memory: 269.227 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 281.228 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_48) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'conv': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 281.831 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 282.501 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 282.828 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.199 seconds; current allocated memory: 283.413 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_31s_16ns_47_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.237 seconds; current allocated memory: 284.814 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.444 seconds; current allocated memory: 288.270 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_31s_16ns_47_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_1_div'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.345 seconds; current allocated memory: 297.660 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 13.851 seconds; current allocated memory: 298.385 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 15.592 seconds; peak allocated memory: 971.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.624 seconds; current allocated memory: 195.616 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.366 seconds; current allocated memory: 191.970 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.798 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.245 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.134 seconds; current allocated memory: 205.753 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 217.908 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lenet5' (src/LeNet5.cpp:75).
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.461 seconds; current allocated memory: 251.940 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 251.051 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.151 seconds; current allocated memory: 251.488 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.223 seconds; current allocated memory: 252.170 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.242 seconds; current allocated memory: 253.410 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_0'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.903 seconds; current allocated memory: 263.054 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 11.992 seconds; current allocated memory: 263.609 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.774 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.581 seconds; current allocated memory: 195.486 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 971.457 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.727 seconds; current allocated memory: 193.297 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.275 seconds; current allocated memory: 196.556 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 196.557 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.163 seconds; current allocated memory: 209.592 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 226.986 MB.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lenet5' (src/LeNet5.cpp:75).
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'conv' (src/LeNet5.cpp:12:24).
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_20_1' (src/LeNet5.cpp:20) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_21_2' (src/LeNet5.cpp:21) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_22_3' (src/LeNet5.cpp:22) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_25_4' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_26_5' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
WARNING: [HLS 200-936] Cannot unroll loop 'VITIS_LOOP_30_6' (src/LeNet5.cpp:12) in function 'conv': cannot completely unroll a loop with a variable trip count.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 267.055 MB.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out' (src/LeNet5.cpp:43:50)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.406 seconds; current allocated memory: 278.969 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_59) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln29) to 3 in order to utilize available DSP registers.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'conv': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 279.562 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.253 seconds; current allocated memory: 280.212 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
WARNING: [SCHED 204-65] Unable to satisfy pipeline directive for function 'lenet5': contains subloop(s) that are not unrolled.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 280.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.225 seconds; current allocated memory: 281.386 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 282.702 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.52 seconds; current allocated memory: 286.398 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_4s_4s_4_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_1_div'
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.476 seconds; current allocated memory: 296.708 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 14.083 seconds; current allocated memory: 297.521 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 15.83 seconds; peak allocated memory: 971.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.656 seconds; current allocated memory: 195.632 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design -trace_level port 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.206 seconds; current allocated memory: 195.632 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.457 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.848 seconds; current allocated memory: 193.298 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.245 seconds; current allocated memory: 196.112 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 196.113 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.161 seconds; current allocated memory: 205.782 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 217.937 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.457 seconds; current allocated memory: 251.970 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.289 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.207 seconds; current allocated memory: 251.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.265 seconds; current allocated memory: 252.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 253.983 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.185 seconds; current allocated memory: 264.021 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 12.497 seconds; current allocated memory: 264.589 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 1 seconds. Total elapsed time: 14.249 seconds; peak allocated memory: 971.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.061 seconds; current allocated memory: 971.442 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.643 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.045 seconds; current allocated memory: 196.096 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 196.097 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 205.782 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.195 seconds; current allocated memory: 217.937 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.43 seconds; current allocated memory: 251.970 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.283 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 0.184 seconds; current allocated memory: 251.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 252.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 253.983 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.107 seconds; current allocated memory: 264.021 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 11.907 seconds; current allocated memory: 264.589 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.581 seconds; peak allocated memory: 971.442 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.253 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.596 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.029 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.121 seconds; current allocated memory: 205.752 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.442 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.277 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.187 seconds; current allocated memory: 251.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.262 seconds; current allocated memory: 252.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.282 seconds; current allocated memory: 253.982 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.097 seconds; current allocated memory: 264.006 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 11.829 seconds; current allocated memory: 264.558 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.508 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.575 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.022 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.048 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.124 seconds; current allocated memory: 205.752 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.448 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.176 seconds; current allocated memory: 251.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.249 seconds; current allocated memory: 252.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 253.982 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.072 seconds; current allocated memory: 264.006 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 11.773 seconds; current allocated memory: 264.558 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.494 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.621 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 3.97 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.122 seconds; current allocated memory: 205.752 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.431 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 251.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.254 seconds; current allocated memory: 252.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 253.982 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.078 seconds; current allocated memory: 264.006 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 11.752 seconds; current allocated memory: 264.559 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.436 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.699 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.427 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.67 seconds; current allocated memory: 193.312 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 5.177 seconds; current allocated memory: 196.082 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.107 seconds; current allocated memory: 196.082 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.234 seconds; current allocated memory: 205.752 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.362 seconds; current allocated memory: 217.906 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.853 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.622 seconds; current allocated memory: 251.132 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.432 seconds; current allocated memory: 251.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.601 seconds; current allocated memory: 252.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.699 seconds; current allocated memory: 253.982 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.005 seconds; current allocated memory: 263.990 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 7 seconds. CPU system time: 1 seconds. Elapsed time: 18.393 seconds; current allocated memory: 264.558 MB.
INFO: [HLS 200-112] Total CPU user time: 9 seconds. Total CPU system time: 1 seconds. Total elapsed time: 20.105 seconds; peak allocated memory: 971.427 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.386 seconds; current allocated memory: 195.501 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.153 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.781 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.279 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.174 seconds; current allocated memory: 205.752 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.206 seconds; current allocated memory: 217.906 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.445 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.294 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.214 seconds; current allocated memory: 251.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.26 seconds; current allocated memory: 252.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.288 seconds; current allocated memory: 253.982 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.167 seconds; current allocated memory: 263.991 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 12.479 seconds; current allocated memory: 264.558 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 0 seconds. Total elapsed time: 14.181 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.828 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:43:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:39:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:33:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:29:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:26:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:25:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:21:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:18:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:17:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:54:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:70:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:66:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:63:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:62:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:55:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:101:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:102:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:81:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.351 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.137 seconds; current allocated memory: 205.753 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.203 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_63_5' (src/LeNet5.cpp:61) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.445 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_62_4' (src/LeNet5.cpp:61:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_59_3' (src/LeNet5.cpp:59:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_58_2' (src/LeNet5.cpp:58:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_57_1' (src/LeNet5.cpp:57:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.276 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_62_4_VITIS_LOOP_63_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)
	'and' operation ('and_ln67_1', src/LeNet5.cpp:67) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:67) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:67) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:67) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.198 seconds; current allocated memory: 251.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 252.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.301 seconds; current allocated memory: 253.983 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 2.159 seconds; current allocated memory: 264.006 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 12.52 seconds; current allocated memory: 264.558 MB.
INFO: [HLS 200-112] Total CPU user time: 4 seconds. Total CPU system time: 1 seconds. Total elapsed time: 14.299 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.447 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.574 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.934 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.121 seconds; current allocated memory: 205.753 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.441 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:13) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.279 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [160]  (4.2 ns)
	'and' operation ('and_ln69_1', src/LeNet5.cpp:69) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:69) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:69) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.179 seconds; current allocated memory: 251.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 252.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.274 seconds; current allocated memory: 253.983 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.074 seconds; current allocated memory: 263.991 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 11.67 seconds; current allocated memory: 264.559 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.316 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.217 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.328 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.652 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.027 seconds; current allocated memory: 196.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.049 seconds; current allocated memory: 196.067 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.125 seconds; current allocated memory: 205.753 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.186 seconds; current allocated memory: 217.907 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.442 seconds; current allocated memory: 251.940 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.273 seconds; current allocated memory: 251.133 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound5) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [160]  (4.2 ns)
	'and' operation ('and_ln69_1', src/LeNet5.cpp:69) [161]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:69) [163]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:69) [140]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [160]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.191 seconds; current allocated memory: 251.681 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.257 seconds; current allocated memory: 252.451 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 253.983 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.081 seconds; current allocated memory: 263.991 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 11.862 seconds; current allocated memory: 264.559 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.517 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 8.503 seconds; current allocated memory: 195.502 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.461 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.327 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.118 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.346 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.863 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.18 seconds; current allocated memory: 196.081 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.051 seconds; current allocated memory: 196.082 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 205.748 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.193 seconds; current allocated memory: 217.901 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.435 seconds; current allocated memory: 251.915 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.287 seconds; current allocated memory: 250.989 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.197 seconds; current allocated memory: 251.510 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.234 seconds; current allocated memory: 252.222 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.252 seconds; current allocated memory: 253.605 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.936 seconds; current allocated memory: 262.875 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 12.089 seconds; current allocated memory: 263.414 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.795 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.919 seconds; current allocated memory: 195.486 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.457 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.601 seconds; current allocated memory: 193.297 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.978 seconds; current allocated memory: 196.111 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 196.111 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.127 seconds; current allocated memory: 205.777 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.198 seconds; current allocated memory: 217.931 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.434 seconds; current allocated memory: 251.944 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.275 seconds; current allocated memory: 250.990 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 251.494 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 252.207 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.255 seconds; current allocated memory: 253.589 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.953 seconds; current allocated memory: 262.937 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 11.591 seconds; current allocated memory: 263.444 MB.
INFO: [HLS 200-112] Total CPU user time: 5 seconds. Total CPU system time: 1 seconds. Total elapsed time: 13.319 seconds; peak allocated memory: 971.457 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.879 seconds; current allocated memory: 195.485 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.361 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.742 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 5.421 seconds; current allocated memory: 196.081 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.114 seconds; current allocated memory: 196.082 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.244 seconds; current allocated memory: 205.748 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.373 seconds; current allocated memory: 217.901 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.851 seconds; current allocated memory: 251.915 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.507 seconds; current allocated memory: 250.989 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.38 seconds; current allocated memory: 251.509 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.571 seconds; current allocated memory: 252.222 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.636 seconds; current allocated memory: 253.605 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_2'
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.625 seconds; current allocated memory: 262.875 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 18.149 seconds; current allocated memory: 263.414 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 1 seconds. Total elapsed time: 19.963 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
ERROR: [COSIM 212-360] Aborting co-simulation: C TB simulation failed.
ERROR: [COSIM 212-320] C TB testing failed, stop generating test vectors. Please check C TB or re-run cosim.
ERROR: [COSIM 212-5] *** C/RTL co-simulation file generation failed. ***
ERROR: [COSIM 212-4] *** C/RTL co-simulation finished: FAIL ***
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 9.6 seconds; current allocated memory: 195.486 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.137 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.893 seconds; current allocated memory: 192.003 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.07 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.966 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, int*, int*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, int*, int*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, int*, int*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, int*, int*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 4.041 seconds; current allocated memory: 196.510 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 196.510 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.165 seconds; current allocated memory: 209.549 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.245 seconds; current allocated memory: 226.933 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_32_6' (src/LeNet5.cpp:14) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.557 seconds; current allocated memory: 266.988 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_28_5' (src/LeNet5.cpp:14:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_27_4' (src/LeNet5.cpp:14:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_24_3' (src/LeNet5.cpp:24:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_23_2' (src/LeNet5.cpp:23:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_22_1' (src/LeNet5.cpp:22:27) in function 'conv'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out' (src/LeNet5.cpp:45:50)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.419 seconds; current allocated memory: 279.173 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_41) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_8_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_4_VITIS_LOOP_28_5_VITIS_LOOP_32_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:35) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 21, loop 'VITIS_LOOP_27_4_VITIS_LOOP_28_5_VITIS_LOOP_32_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.25 seconds; current allocated memory: 279.926 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.258 seconds; current allocated memory: 280.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.356 seconds; current allocated memory: 281.267 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 282.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32s_32s_32_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.353 seconds; current allocated memory: 284.146 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.61 seconds; current allocated memory: 288.843 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_4s_4s_4_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32s_32s_32_1_1_Multiplier_4'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.609 seconds; current allocated memory: 298.943 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 14.499 seconds; current allocated memory: 299.739 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 16.171 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 22.122 seconds; current allocated memory: 199.610 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.178 seconds; current allocated memory: 191.970 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.429 seconds; current allocated memory: 191.971 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.069 seconds; current allocated memory: 971.443 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.503 seconds; current allocated memory: 193.313 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:341)
INFO: [HLS 214-131] Inlining function 'ap_int<17>::ap_int<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:555)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1347:430)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<17, true>(ap_int_base<17, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<32, true>::plus operator+<17, true, 32, true>(ap_int_base<17, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, false>(ap_int_base<16, false> const&) const' into 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<16, true>(ap_int_base<16, true> const&) const' into 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:520)
INFO: [HLS 214-131] Inlining function 'bool ap_int_base<32, true>::operator<<8, false>(ap_int_base<8, false> const&) const' into 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1616:558)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<32>::ap_uint<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<48>::ap_uint<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<48, false>(ap_int_base<48, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_uint<49>::ap_uint<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::ap_int_base<32, false>(ap_int_base<32, false> const&)' into 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<49, false>(ap_int_base<49, false> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<51>::ap_int<51, true>(ap_int_base<51, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<32, true>::plus operator+<49, false, 32, true>(ap_int_base<49, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<40>::ap_int<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::ap_int_base<8, false>(ap_int_base<8, false> const&)' into 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<8, false>::mult operator*<32, true, 8, false>(ap_int_base<32, true> const&, ap_int_base<8, false> const&)' into 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<56>::ap_int<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<56, true>(ap_int_base<56, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<72>::ap_int<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::mult operator*<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<64>::ap_int<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<72, true>(ap_int_base<72, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<73>::ap_int<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<73, true>(ap_int_base<73, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<74>::ap_int<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<74, true>(ap_int_base<74, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<75>::ap_int<75, true>(ap_int_base<75, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<32, true>::plus operator+<74, true, 32, true>(ap_int_base<74, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, true>(ap_int_base<16, true> const&)' into 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:216)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, true>::mult operator*<32, true, 16, true>(ap_int_base<32, true> const&, ap_int_base<16, true> const&)' into 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:254)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<64, true>(ap_int_base<64, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<65>::ap_int<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<32, true>::plus operator+<65, true, 32, true>(ap_int_base<65, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:13)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<($_0)32, true>::plus operator+<65, true>(ap_int_base<65, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, true>::RType<($_0)32, true>::mult operator*<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:41:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<75, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:15)
INFO: [HLS 214-131] Inlining function 'ap_int_base<74, true>::RType<($_0)32, true>::plus operator+<74, true>(ap_int_base<74, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:55)
INFO: [HLS 214-131] Inlining function 'ap_int_base<73, true>::RType<48, true>::plus operator+<73, true, 48, true>(ap_int_base<73, true> const&, ap_int_base<48, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:49)
INFO: [HLS 214-131] Inlining function 'ap_int_base<72, true>::RType<64, true>::plus operator+<72, true, 64, true>(ap_int_base<72, true> const&, ap_int_base<64, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<56, true>::RType<16, false>::mult operator*<56, true, 16, false>(ap_int_base<56, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:25)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<16, false>::mult operator*<40, true, 16, false>(ap_int_base<40, true> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:35:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:34:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:32:42)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:31:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:30:23)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:28:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:27:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:24:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, true>(int, ap_int_base<16, true> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:23:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:22:39)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:18)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:20:13)
INFO: [HLS 214-131] Inlining function 'ap_int<16>::ap_int<33>(ap_int<33> const&)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:9)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'conv(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:19:18)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1364:371)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<40, true>(ap_int_base<40, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<41>::ap_int<41, true>(ap_int_base<41, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<41, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<32, true>::plus operator+<40, true, 32, true>(ap_int_base<40, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<65, true>(ap_int_base<65, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<66>::ap_int<66, true>(ap_int_base<66, true> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:56:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<66, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<65, true>::RType<16, false>::plus operator+<65, true, 16, false>(ap_int_base<65, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<64, true>::RType<48, true>::plus operator+<64, true, 48, true>(ap_int_base<64, true> const&, ap_int_base<48, true> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<16, false>::mult operator*<48, true, 16, false>(ap_int_base<48, true> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:72:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:87)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:80)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:82)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<51, true>::operator long long() const' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<49, false>::RType<($_0)32, true>::plus operator+<49, false>(ap_int_base<49, false> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, false>::RType<32, false>::plus operator+<48, false, 32, false>(ap_int_base<48, false> const&, ap_int_base<32, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:43)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, false>::RType<16, false>::mult operator*<32, false, 16, false>(ap_int_base<32, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<16, false>::mult operator*<16, false, 16, false>(ap_int_base<16, false> const&, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:69:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:68:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<41>(ap_int<41> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<40, true>::RType<($_0)32, true>::plus operator+<40, true>(ap_int_base<40, true> const&, int)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<8, false>::RType<($_0)32, true>::mult operator*<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:67:27)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:65:39)
INFO: [HLS 214-131] Inlining function 'bool operator<<8, false>(int, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:64:38)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:61:41)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'bool operator<<16, false>(int, ap_int_base<16, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:59:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::div operator/<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' (src/LeNet5.cpp:57:12)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:48)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:103:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint<33>(ap_int<33> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<17, true>::RType<($_0)32, true>::plus operator+<17, true>(ap_int_base<17, true> const&, int)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:48)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<8, false>::minus operator-<16, false, 8, false>(ap_int_base<16, false> const&, ap_int_base<8, false> const&)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:104:37)
INFO: [HLS 214-178] Inlining function 'pool(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, float*, float*)' into 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<1>, float*, float*, ap_uint<1>, ap_uint<16>, ap_uint<16>, ap_uint<16>, ap_uint<8>, ap_uint<8>, ap_uint<16>, float*, float*)' (src/LeNet5.cpp:83:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.682 seconds; current allocated memory: 196.526 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 196.527 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.207 seconds; current allocated memory: 209.563 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.281 seconds; current allocated memory: 226.956 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_32_6' (src/LeNet5.cpp:14) in function 'conv' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_65_5' (src/LeNet5.cpp:63) in function 'lenet5' automatically.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.648 seconds; current allocated memory: 267.026 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_64_4' (src/LeNet5.cpp:63:15) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_61_3' (src/LeNet5.cpp:61:29) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_60_2' (src/LeNet5.cpp:60:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_59_1' (src/LeNet5.cpp:59:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_28_5' (src/LeNet5.cpp:14:12) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_27_4' (src/LeNet5.cpp:14:12) in function 'conv'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_24_3' (src/LeNet5.cpp:24:29) in function 'conv' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_23_2' (src/LeNet5.cpp:23:28) in function 'conv'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_22_1' (src/LeNet5.cpp:22:27) in function 'conv'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out' (src/LeNet5.cpp:45:50)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.496 seconds; current allocated memory: 279.329 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound62) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=bound) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_ln31_1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_8) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln31) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=empty_43) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_9) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_8_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=add_ln31_3) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=mul_i182_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=p_mid1) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_4_VITIS_LOOP_28_5_VITIS_LOOP_32_6'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/LeNet5.cpp:35) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 27, loop 'VITIS_LOOP_27_4_VITIS_LOOP_28_5_VITIS_LOOP_32_6'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.332 seconds; current allocated memory: 280.132 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.354 seconds; current allocated memory: 281.062 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-486] Changing DSP48 latency (root=bound4) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_mid1) to 3 in order to utilize available DSP registers.
INFO: [HLS 200-486] Changing DSP48 latency (root=ret_3) to 3 in order to utilize available DSP registers.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 5, loop 'VITIS_LOOP_64_4_VITIS_LOOP_65_5'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [199]  (4.2 ns)
	'and' operation ('and_ln69_1', src/LeNet5.cpp:69) [200]  (0.8 ns)
	'select' operation ('sum', src/LeNet5.cpp:69) [201]  (0.705 ns)
	'phi' operation ('sum') with incoming values : ('sum', src/LeNet5.cpp:69) [161]  (0 ns)
	'fcmp' operation ('tmp_2', src/LeNet5.cpp:69) [199]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.456 seconds; current allocated memory: 281.585 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.348 seconds; current allocated memory: 282.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'am_addmul_8ns_15ns_16ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'ama_addmuladd_8ns_15ns_16ns_48ns_48_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_8ns_16ns_32ns_32_4_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_15ns_16ns_31_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_16ns_24_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_8ns_24ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.46 seconds; current allocated memory: 284.749 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/pool_en' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Hin_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/Win_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KW_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/KH_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/CHout_pool0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'CHin_conv0', 'Hin_conv0', 'Win_conv0', 'CHout_conv0', 'KW_conv0', 'KH_conv0', 'relu_en_conv0', 'w_conv0', 'b_conv0', 'pool_en', 'CHin_pool0', 'Hin_pool0', 'Win_pool0', 'KW_pool0', 'KH_pool0', 'CHout_pool0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mac_muladd_16ns_16ns_16ns_32_4_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_16ns_32ns_48_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_32ns_16ns_48_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_4s_4s_4_1_1': 5 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_8ns_8ns_16_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mul_mul_16ns_16ns_32_4_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'udiv_16ns_8ns_16_20_seq_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.798 seconds; current allocated memory: 289.763 MB.
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_16ns_32ns_48_1_1_Multiplier_0'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_4s_4s_4_1_1_Multiplier_1'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_8ns_8ns_16_1_1_Multiplier_2'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_mul_32ns_16ns_48_1_1_Multiplier_3'
INFO: [RTMG 210-282] Generating pipelined core: 'lenet5_udiv_16ns_8ns_16_20_seq_1_div'
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 3.472 seconds; current allocated memory: 300.588 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 6 seconds. CPU system time: 1 seconds. Elapsed time: 17.47 seconds; current allocated memory: 301.371 MB.
INFO: [HLS 200-112] Total CPU user time: 8 seconds. Total CPU system time: 1 seconds. Total elapsed time: 19.354 seconds; peak allocated memory: 971.443 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 45.696 seconds; current allocated memory: 200.780 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.666 seconds; current allocated memory: 192.084 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.951 seconds; current allocated memory: 192.068 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.96 seconds; current allocated memory: 192.068 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.683 seconds; current allocated memory: 192.084 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.046 seconds; current allocated memory: 192.035 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.8 seconds; current allocated memory: 192.035 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.462 MB.
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 14.077 seconds; current allocated memory: 193.557 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:44:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:38:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:28:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:28:34)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:27:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:64)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:72)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:65)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:42)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:24:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
INFO: [HLS 214-115] Multiple burst writes of length 4 and bit width 32 in loop 'VITIS_LOOP_16_2'(src/pool.cpp:16:20) has been inferred on port 'gmem' (src/pool.cpp:16:20)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.999 seconds; current allocated memory: 195.190 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 195.191 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.138 seconds; current allocated memory: 203.705 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.173 seconds; current allocated memory: 214.483 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_3' (src/conv.cpp:23) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_17_3' (src/pool.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_28_3' (src/conv.cpp:23) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_17_3' (src/pool.cpp:19) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_4' (src/conv.cpp:23) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_32_5' (src/conv.cpp:23) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_20_4' (src/pool.cpp:19) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_21_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.318 seconds; current allocated memory: 247.070 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_27_2' (src/conv.cpp:27:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_16_2' (src/pool.cpp:16:28) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:48:41)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.348 seconds; current allocated memory: 246.528 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_2_VITIS_LOOP_28_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:38) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 25, Depth = 147, loop 'VITIS_LOOP_27_2_VITIS_LOOP_28_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_16_2_VITIS_LOOP_17_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_16_2_VITIS_LOOP_17_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.826 seconds; current allocated memory: 249.603 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.87 seconds; current allocated memory: 252.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'relu_en_conv0', 'w_conv0', 'b_conv0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.757 seconds; current allocated memory: 257.632 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.714 seconds; current allocated memory: 275.122 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 4 seconds. CPU system time: 1 seconds. Elapsed time: 26.518 seconds; current allocated memory: 275.554 MB.
INFO: [HLS 200-112] Total CPU user time: 7 seconds. Total CPU system time: 1 seconds. Total elapsed time: 28.219 seconds; peak allocated memory: 971.462 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 146.28 seconds; current allocated memory: 199.881 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.748 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.462 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.573 seconds; current allocated memory: 193.540 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:32:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:42:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:36:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:23:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:28:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:28:34)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:27:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:64)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:70)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:72)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:65)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:42)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:37)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:25:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:24:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, float*, float*, float*, float*)' (src/LeNet5.cpp:8:0)
INFO: [HLS 214-115] Multiple burst writes of length 4 and bit width 32 in loop 'VITIS_LOOP_16_2'(src/pool.cpp:16:20) has been inferred on port 'gmem' (src/pool.cpp:16:20)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.436 seconds; current allocated memory: 195.221 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 195.222 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 203.736 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.155 seconds; current allocated memory: 214.515 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_3' (src/conv.cpp:21) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_17_3' (src/pool.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_26_3' (src/conv.cpp:21) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_17_3' (src/pool.cpp:19) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_29_4' (src/conv.cpp:21) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_5' (src/conv.cpp:21) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_20_4' (src/pool.cpp:19) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_21_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.301 seconds; current allocated memory: 247.086 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_2' (src/conv.cpp:25:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_16_2' (src/pool.cpp:16:28) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:46:41)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.342 seconds; current allocated memory: 246.543 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_2_VITIS_LOOP_26_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:36) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 25, Depth = 147, loop 'VITIS_LOOP_25_2_VITIS_LOOP_26_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_16_2_VITIS_LOOP_17_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_16_2_VITIS_LOOP_17_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 0.849 seconds; current allocated memory: 249.603 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.876 seconds; current allocated memory: 252.645 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'relu_en_conv0', 'w_conv0', 'b_conv0', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.744 seconds; current allocated memory: 257.632 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 2.705 seconds; current allocated memory: 275.123 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 136.99 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 19.412 seconds; current allocated memory: 275.570 MB.
INFO: [HLS 200-112] Total CPU user time: 6 seconds. Total CPU system time: 1 seconds. Total elapsed time: 21.125 seconds; peak allocated memory: 971.462 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 39.8 seconds; current allocated memory: 199.868 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.957 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.897 seconds; current allocated memory: 192.037 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.048 seconds; current allocated memory: 192.003 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 5.627 seconds; current allocated memory: 192.003 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.656 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.453 seconds; current allocated memory: 192.003 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.619 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.476 MB.
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.482 seconds; current allocated memory: 193.634 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:51:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:78:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:88:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:79:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:55:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.674 seconds; current allocated memory: 195.638 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 195.639 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.397 seconds; current allocated memory: 207.109 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 2 seconds. CPU system time: 0 seconds. Elapsed time: 4.405 seconds; current allocated memory: 217.979 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_80_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_4' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_39_5' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_4' (src/pool.cpp:50) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...4 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.7 seconds; current allocated memory: 252.073 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_34_2' (src/conv.cpp:34:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_1' (src/conv.cpp:33:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_76_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_75_4' (src/conv.cpp:67:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_72_3' (src/conv.cpp:67:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_71_2' (src/conv.cpp:71:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_70_1' (src/conv.cpp:70:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_2' (src/pool.cpp:47:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_46_1' (src/pool.cpp:46:27) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:55:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:38:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:92:43)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.414 seconds; current allocated memory: 258.306 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15, loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.541 seconds; current allocated memory: 262.050 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.248 seconds; current allocated memory: 267.339 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'relu_en_conv0', 'relu_en_conv1', 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.443 seconds; current allocated memory: 276.900 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 4.67 seconds; current allocated memory: 300.293 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 126.28 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 1 seconds. Elapsed time: 44.306 seconds; current allocated memory: 300.681 MB.
INFO: [HLS 200-112] Total CPU user time: 21 seconds. Total CPU system time: 1 seconds. Total elapsed time: 46.018 seconds; peak allocated memory: 971.476 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 399.214 seconds; current allocated memory: 200.356 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.555 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.462 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.396 seconds; current allocated memory: 193.587 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:51:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:78:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:88:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:79:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:55:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.654 seconds; current allocated memory: 195.655 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 195.655 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.41 seconds; current allocated memory: 207.126 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.403 seconds; current allocated memory: 217.995 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_80_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_4' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_39_5' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_4' (src/pool.cpp:50) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...4 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.685 seconds; current allocated memory: 252.074 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_34_2' (src/conv.cpp:34:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_1' (src/conv.cpp:33:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_76_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_75_4' (src/conv.cpp:67:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_72_3' (src/conv.cpp:67:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_71_2' (src/conv.cpp:71:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_70_1' (src/conv.cpp:70:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_2' (src/pool.cpp:47:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_46_1' (src/pool.cpp:46:27) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:55:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:38:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:92:43)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.349 seconds; current allocated memory: 258.323 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15, loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.53 seconds; current allocated memory: 262.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 1.266 seconds; current allocated memory: 267.356 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'relu_en_conv0', 'relu_en_conv1', 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.431 seconds; current allocated memory: 276.916 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.624 seconds; current allocated memory: 300.278 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 126.28 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 19 seconds. CPU system time: 1 seconds. Elapsed time: 44.08 seconds; current allocated memory: 300.666 MB.
INFO: [HLS 200-112] Total CPU user time: 21 seconds. Total CPU system time: 1 seconds. Total elapsed time: 45.733 seconds; peak allocated memory: 971.462 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 480.234 seconds; current allocated memory: 200.341 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.12 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.462 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
ERROR: [HLS 214-124] use of undeclared identifier 'feature_out_conv0': E:\HLSproj\src\LeNet5.cpp:27
ERROR: [HLS 214-124] use of undeclared identifier 'feature_out_pool0': E:\HLSproj\src\LeNet5.cpp:28
ERROR: [HLS 214-124] use of undeclared identifier 'feature_out_conv1': E:\HLSproj\src\LeNet5.cpp:29
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.902 seconds; current allocated memory: 193.281 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 4.545 seconds; peak allocated memory: 971.462 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.055 seconds; current allocated memory: 971.477 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.048 seconds; current allocated memory: 193.587 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.759 seconds; current allocated memory: 193.931 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.475 seconds; peak allocated memory: 971.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.691 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.478 MB.
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.111 seconds; current allocated memory: 193.635 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.828 seconds; current allocated memory: 193.980 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.527 seconds; peak allocated memory: 971.478 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.001 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 971.478 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.04 seconds; current allocated memory: 193.587 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.711 seconds; current allocated memory: 193.932 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.353 seconds; peak allocated memory: 971.478 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.294 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.477 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.047 seconds; current allocated memory: 193.587 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 11.774 seconds; current allocated memory: 193.931 MB.
INFO: [HLS 200-112] Total CPU user time: 2 seconds. Total CPU system time: 0 seconds. Total elapsed time: 13.465 seconds; peak allocated memory: 971.477 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.386 seconds; current allocated memory: 192.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.106 seconds; current allocated memory: 191.881 MB.
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.496 seconds; current allocated memory: 193.635 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:51:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:42:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:78:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<1, false>::operator unsigned long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:88:8)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:82:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' (src/conv.cpp:79:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:55:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(ap_uint<1>, float*, float*, float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(ap_uint<1>, ap_uint<1>, float*, float*, float*, float*, float*, float*)' (src/LeNet5.cpp:11:0)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.531 seconds; current allocated memory: 195.639 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 195.640 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.414 seconds; current allocated memory: 207.110 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.371 seconds; current allocated memory: 217.980 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_80_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_35_3' (src/conv.cpp:30) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_4' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_39_5' (src/conv.cpp:30) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_4' (src/pool.cpp:50) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...4 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 4.654 seconds; current allocated memory: 252.074 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_34_2' (src/conv.cpp:34:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_1' (src/conv.cpp:33:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_76_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_75_4' (src/conv.cpp:67:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_72_3' (src/conv.cpp:67:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_71_2' (src/conv.cpp:71:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_70_1' (src/conv.cpp:70:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_2' (src/pool.cpp:47:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_46_1' (src/pool.cpp:46:27) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:55:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:38:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:92:43)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 8.319 seconds; current allocated memory: 258.307 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:33) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_33_1_VITIS_LOOP_34_2_VITIS_LOOP_35_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_75_4_VITIS_LOOP_76_5_VITIS_LOOP_80_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 15, loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.548 seconds; current allocated memory: 262.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.26 seconds; current allocated memory: 267.341 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/relu_en_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'relu_en_conv0', 'relu_en_conv1', 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'feature_in', 'feature_out' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.441 seconds; current allocated memory: 276.901 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 4.637 seconds; current allocated memory: 300.295 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 126.28 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 21 seconds. CPU system time: 1 seconds. Elapsed time: 44.049 seconds; current allocated memory: 300.684 MB.
INFO: [HLS 200-112] Total CPU user time: 22 seconds. Total CPU system time: 1 seconds. Total elapsed time: 46.007 seconds; peak allocated memory: 300.295 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 382.259 seconds; current allocated memory: 200.357 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.008 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.866 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.684 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.832 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.297 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.538 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.479 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.986 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.555 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.577 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.462 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.173 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.951 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 4.119 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.154 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.76 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.018 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.622 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 4.834 seconds; current allocated memory: 192.069 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 3.118 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.894 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 3.028 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.843 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.916 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.063 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.91 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.866 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.904 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 9.391 seconds; current allocated memory: 192.036 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.004 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.893 seconds; current allocated memory: 192.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.786 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.561 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.599 seconds; current allocated memory: 192.040 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.825 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.717 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.559 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.584 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.735 seconds; current allocated memory: 192.040 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.661 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.763 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.7 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.571 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.84 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.589 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.697 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.526 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.736 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 5.322 seconds; current allocated memory: 192.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 5.447 seconds; current allocated memory: 192.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.693 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 2.365 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.316 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.853 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.638 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.584 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.382 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.881 seconds; current allocated memory: 192.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.508 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.492 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
ERROR: [SIM 211-100] 'csim_design' failed: compilation error(s).
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.89 seconds; current allocated memory: 192.089 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.776 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.012 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 2.566 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 971.541 MB.
INFO: [HLS 200-10] Analyzing design file 'src/softmax.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/linear.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 19.669 seconds; current allocated memory: 193.753 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:33:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:76:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:77:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:54:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:55:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'fmax(float*, int*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-115] Multiple burst writes of length 10 and bit width 32 in loop 'VITIS_LOOP_47_1'(src/linear.cpp:47:19) has been inferred on port 'gmem' (src/linear.cpp:47:19)
INFO: [HLS 214-115] Multiple burst reads of length 9 and bit width 32 in loop 'VITIS_LOOP_11_1'(src/softmax.cpp:11:19) has been inferred on port 'gmem' (src/softmax.cpp:11:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 6.332 seconds; current allocated memory: 196.211 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.052 seconds; current allocated memory: 196.212 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 11.583 seconds; current allocated memory: 204.561 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 8 seconds. CPU system time: 0 seconds. Elapsed time: 11.601 seconds; current allocated memory: 209.344 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_78_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_4' (src/linear.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_2' (src/linear.cpp:45) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_11_1' (src/softmax.cpp:8) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_48_3' (src/pool.cpp:50) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_37_4' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_5' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_51_4' (src/pool.cpp:50) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...7 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 11.786 seconds; current allocated memory: 237.761 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_2' (src/conv.cpp:33:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_32_1' (src/conv.cpp:32:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_74_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_73_4' (src/conv.cpp:65:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_70_3' (src/conv.cpp:65:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_69_2' (src/conv.cpp:69:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_68_1' (src/conv.cpp:68:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_2' (src/pool.cpp:47:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_46_1' (src/pool.cpp:46:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_3' (src/linear.cpp:19:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_2' (src/linear.cpp:19:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_21_1' (src/linear.cpp:19:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/linear.cpp:45:12) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:54:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:38:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:90:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool1' (src/pool.cpp:59:42)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_fc0' (src/linear.cpp:35:21)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 8.56 seconds; current allocated memory: 242.230 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:32) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_46_1_VITIS_LOOP_47_2_VITIS_LOOP_48_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'.
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_8', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_8', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_8', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_8', src/linear.cpp:47).
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 26, loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_11_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_11_1'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)
	'and' operation ('and_ln13_1', src/softmax.cpp:13) [1425]  (0.8 ns)
	'select' operation ('max', src/softmax.cpp:13) [1426]  (0.705 ns)
	'phi' operation ('max') with incoming values : ('max', src/softmax.cpp:8) ('max', src/softmax.cpp:13) [1402]  (0 ns)
	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.79 seconds; current allocated memory: 246.525 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.594 seconds; current allocated memory: 252.885 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/result' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'w_fc0', 'b_fc0', 'w_fc1', 'b_fc1', 'feature_in', 'feature_out', 'result' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.718 seconds; current allocated memory: 264.141 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_fc0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 5.461 seconds; current allocated memory: 290.038 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 35 seconds. CPU system time: 1 seconds. Elapsed time: 80.456 seconds; current allocated memory: 290.679 MB.
INFO: [HLS 200-112] Total CPU user time: 37 seconds. Total CPU system time: 1 seconds. Total elapsed time: 82.213 seconds; peak allocated memory: 971.541 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 4.736 seconds; current allocated memory: 192.041 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.542 MB.
INFO: [HLS 200-10] Analyzing design file 'src/softmax.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/linear.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.472 seconds; current allocated memory: 193.754 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:32)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:27)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:29)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:45:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:40:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:40:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:37:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:77:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:20)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:28)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:82:21)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:78:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:63:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:63:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:59:23)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_31_5' (src/pool.cpp:31:23) in function 'pool_layer0' completely with a factor of 2 (src/pool.cpp:31:23)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_54_5' (src/pool.cpp:54:23) in function 'pool_layer1' completely with a factor of 2 (src/pool.cpp:54:23)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_42_6' (src/conv.cpp:42:24) in function 'conv_layer0' completely with a factor of 1 (src/conv.cpp:42:24)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_79_6' (src/conv.cpp:79:24) in function 'conv_layer1' completely with a factor of 16 (src/conv.cpp:79:24)
INFO: [HLS 214-178] Inlining function 'conv_layer0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'fmax(float*, int*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-115] Multiple burst writes of length 10 and bit width 32 in loop 'VITIS_LOOP_47_1'(src/linear.cpp:47:19) has been inferred on port 'gmem' (src/linear.cpp:47:19)
INFO: [HLS 214-115] Multiple burst reads of length 9 and bit width 32 in loop 'VITIS_LOOP_11_1'(src/softmax.cpp:11:19) has been inferred on port 'gmem' (src/softmax.cpp:11:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 4.06 seconds; current allocated memory: 196.663 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.054 seconds; current allocated memory: 196.663 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 8.426 seconds; current allocated memory: 208.281 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 8.441 seconds; current allocated memory: 215.349 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_71_3' (src/conv.cpp:66) in function 'conv_layer1' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_3' (src/pool.cpp:52) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_4' (src/linear.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_2' (src/linear.cpp:45) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_11_1' (src/softmax.cpp:8) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_50_3' (src/pool.cpp:52) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_71_3' (src/conv.cpp:66) in function 'conv_layer1' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_37_4' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_5' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_4' (src/pool.cpp:52) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_74_4' (src/conv.cpp:66) in function 'conv_layer1' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_75_5' in function 'conv_layer1' completely with a factor of 5.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 10 seconds. CPU system time: 0 seconds. Elapsed time: 15.384 seconds; current allocated memory: 255.341 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_2' (src/conv.cpp:33:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_32_1' (src/conv.cpp:32:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_49_2' (src/pool.cpp:49:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_48_1' (src/pool.cpp:48:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_3' (src/linear.cpp:19:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_2' (src/linear.cpp:19:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_21_1' (src/linear.cpp:19:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/linear.cpp:45:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_70_2' (src/conv.cpp:70:28) in function 'conv_layer1'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_69_1' (src/conv.cpp:69:27) in function 'conv_layer1'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:55:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:40:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool1' (src/pool.cpp:63:42)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_fc0' (src/linear.cpp:35:21)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out' (src/conv.cpp:92:43)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 11 seconds. CPU system time: 0 seconds. Elapsed time: 18.359 seconds; current allocated memory: 311.699 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'conv_layer1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_69_1_VITIS_LOOP_70_2_VITIS_LOOP_71_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:69) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [SCHED 204-61] Unable to satisfy pipeline directive for loop 'VITIS_LOOP_69_1_VITIS_LOOP_70_2_VITIS_LOOP_71_3': unable to pipeline.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 318 seconds. CPU system time: 2 seconds. Elapsed time: 588.134 seconds; current allocated memory: 337.252 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 13 seconds. CPU system time: 0 seconds. Elapsed time: 19.705 seconds; current allocated memory: 403.985 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:32) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_48_1_VITIS_LOOP_49_2_VITIS_LOOP_50_3'.
WARNING: [HLS 200-885] Unable to schedule 'load' operation ('feature_out_conv1_load_2', src/pool.cpp:60) on array 'feature_out_conv1' due to limited memory ports. Please consider using a memory core with more ports or partitioning the array 'feature_out_conv1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 2, Depth = 11, loop 'VITIS_LOOP_48_1_VITIS_LOOP_49_2_VITIS_LOOP_50_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'.
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_1', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_1', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_1', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_1', src/linear.cpp:47).
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 26, loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_11_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_11_1'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_33', src/softmax.cpp:13) [1249]  (4.2 ns)
	'and' operation ('and_ln13_1', src/softmax.cpp:13) [1250]  (0.8 ns)
	'select' operation ('max', src/softmax.cpp:13) [1251]  (0.705 ns)
	'phi' operation ('max') with incoming values : ('max', src/softmax.cpp:8) ('max', src/softmax.cpp:13) [1227]  (0 ns)
	'fcmp' operation ('tmp_33', src/softmax.cpp:13) [1249]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 7.547 seconds; current allocated memory: 407.565 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.965 seconds; current allocated memory: 413.212 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'conv_layer1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'conv_layer1' is 25754 from HDL expression: ((icmp_ln69_fu_20074_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'conv_layer1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 13.311 seconds; current allocated memory: 505.453 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/result' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'w_fc0', 'b_fc0', 'w_fc1', 'b_fc1', 'feature_in', 'feature_out', 'result' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 12.6 seconds; current allocated memory: 612.715 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_fc0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 5 seconds. CPU system time: 1 seconds. Elapsed time: 8.815 seconds; current allocated memory: 637.182 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 385 seconds. CPU system time: 4 seconds. Elapsed time: 722.706 seconds; current allocated memory: 638.054 MB.
INFO: [HLS 200-112] Total CPU user time: 387 seconds. Total CPU system time: 5 seconds. Total elapsed time: 724.664 seconds; peak allocated memory: 971.542 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.057 seconds; current allocated memory: 971.542 MB.
INFO: [HLS 200-10] Analyzing design file 'src/softmax.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/linear.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.116 seconds; current allocated memory: 193.753 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:76:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:77:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:57:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'fmax(float*, int*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-115] Multiple burst writes of length 10 and bit width 32 in loop 'VITIS_LOOP_47_1'(src/linear.cpp:47:19) has been inferred on port 'gmem' (src/linear.cpp:47:19)
INFO: [HLS 214-115] Multiple burst reads of length 9 and bit width 32 in loop 'VITIS_LOOP_11_1'(src/softmax.cpp:11:19) has been inferred on port 'gmem' (src/softmax.cpp:11:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.677 seconds; current allocated memory: 196.211 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 196.212 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 11.454 seconds; current allocated memory: 204.561 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 11.582 seconds; current allocated memory: 209.343 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_78_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_4' (src/linear.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_2' (src/linear.cpp:45) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_11_1' (src/softmax.cpp:8) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_37_4' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_5' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_4' (src/pool.cpp:51) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...7 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 7 seconds. CPU system time: 0 seconds. Elapsed time: 11.926 seconds; current allocated memory: 237.763 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_2' (src/conv.cpp:33:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_32_1' (src/conv.cpp:32:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_74_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_73_4' (src/conv.cpp:65:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_70_3' (src/conv.cpp:65:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_69_2' (src/conv.cpp:69:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_68_1' (src/conv.cpp:68:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_48_2' (src/pool.cpp:48:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/pool.cpp:47:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_3' (src/linear.cpp:19:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_2' (src/linear.cpp:19:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_21_1' (src/linear.cpp:19:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/linear.cpp:45:12) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:54:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:39:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:90:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool1' (src/pool.cpp:61:42)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_fc0' (src/linear.cpp:35:21)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 8.716 seconds; current allocated memory: 242.230 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:32) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'.
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 26, loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_11_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_11_1'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)
	'and' operation ('and_ln13_1', src/softmax.cpp:13) [1425]  (0.8 ns)
	'select' operation ('max', src/softmax.cpp:13) [1426]  (0.705 ns)
	'phi' operation ('max') with incoming values : ('max', src/softmax.cpp:8) ('max', src/softmax.cpp:13) [1402]  (0 ns)
	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.746 seconds; current allocated memory: 246.525 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.595 seconds; current allocated memory: 252.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/result' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'w_fc0', 'b_fc0', 'w_fc1', 'b_fc1', 'feature_in', 'feature_out', 'result' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0 seconds. CPU system time: 1 seconds. Elapsed time: 1.761 seconds; current allocated memory: 264.142 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_fc0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.594 seconds; current allocated memory: 290.041 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 30 seconds. CPU system time: 1 seconds. Elapsed time: 73.528 seconds; current allocated memory: 290.682 MB.
INFO: [HLS 200-112] Total CPU user time: 32 seconds. Total CPU system time: 1 seconds. Total elapsed time: 75.274 seconds; peak allocated memory: 971.542 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'result' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 506.79 seconds; current allocated memory: 200.461 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'result' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 529.461 seconds; current allocated memory: 200.460 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.073 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.589 seconds; current allocated memory: 192.038 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.685 seconds; current allocated memory: 192.038 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.63 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.518 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.621 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 2.63 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 0.056 seconds; current allocated memory: 971.540 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/linear.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/softmax.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.565 seconds; current allocated memory: 193.752 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:76:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:77:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:57:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'fmax(float*, int*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-115] Multiple burst writes of length 10 and bit width 32 in loop 'VITIS_LOOP_47_1'(src/linear.cpp:47:19) has been inferred on port 'gmem' (src/linear.cpp:47:19)
INFO: [HLS 214-115] Multiple burst reads of length 9 and bit width 32 in loop 'VITIS_LOOP_11_1'(src/softmax.cpp:11:19) has been inferred on port 'gmem' (src/softmax.cpp:11:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.926 seconds; current allocated memory: 196.226 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.059 seconds; current allocated memory: 196.227 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 12.143 seconds; current allocated memory: 204.576 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 11.785 seconds; current allocated memory: 209.358 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_78_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_4' (src/linear.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_50_2' (src/linear.cpp:45) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_11_1' (src/softmax.cpp:8) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_37_4' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_5' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_4' (src/pool.cpp:51) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...7 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 5 seconds. CPU system time: 0 seconds. Elapsed time: 12.477 seconds; current allocated memory: 237.778 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_2' (src/conv.cpp:33:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_32_1' (src/conv.cpp:32:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_74_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_73_4' (src/conv.cpp:65:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_70_3' (src/conv.cpp:65:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_69_2' (src/conv.cpp:69:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_68_1' (src/conv.cpp:68:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_48_2' (src/pool.cpp:48:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/pool.cpp:47:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_3' (src/linear.cpp:19:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_2' (src/linear.cpp:19:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_21_1' (src/linear.cpp:19:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/linear.cpp:45:12) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:54:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:39:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:90:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool1' (src/pool.cpp:61:42)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_fc0' (src/linear.cpp:35:21)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 9 seconds. CPU system time: 1 seconds. Elapsed time: 17.58 seconds; current allocated memory: 242.244 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:32) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'.
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:53) and 'select' operation ('select_ln47_7', src/linear.cpp:47).
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 26, loop 'VITIS_LOOP_47_1_VITIS_LOOP_50_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_11_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_11_1'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)
	'and' operation ('and_ln13_1', src/softmax.cpp:13) [1425]  (0.8 ns)
	'select' operation ('max', src/softmax.cpp:13) [1426]  (0.705 ns)
	'phi' operation ('max') with incoming values : ('max', src/softmax.cpp:8) ('max', src/softmax.cpp:13) [1402]  (0 ns)
	'fcmp' operation ('tmp_40', src/softmax.cpp:13) [1424]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.865 seconds; current allocated memory: 246.540 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.655 seconds; current allocated memory: 252.901 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/result' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'w_fc0', 'b_fc0', 'w_fc1', 'b_fc1', 'feature_in', 'feature_out', 'result' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.786 seconds; current allocated memory: 264.157 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_fc0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 0 seconds. Elapsed time: 5.862 seconds; current allocated memory: 290.039 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 30 seconds. CPU system time: 1 seconds. Elapsed time: 85.014 seconds; current allocated memory: 290.681 MB.
INFO: [HLS 200-112] Total CPU user time: 31 seconds. Total CPU system time: 1 seconds. Total elapsed time: 86.781 seconds; peak allocated memory: 971.540 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'result' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 412.439 seconds; current allocated memory: 200.460 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: export_design -rtl verilog -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file LeNet5_hls_proj/solution1/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 15.346 seconds; current allocated memory: 201.191 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csim_design -quiet 
INFO: [SIM 211-2] *************** CSIM start ***************
INFO: [SIM 211-4] CSIM will launch GCC as the compiler.
INFO: [SIM 211-1] CSim done with 0 errors.
INFO: [SIM 211-3] *************** CSIM finish ***************
INFO: [HLS 200-111] Finished Command csim_design CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 7.172 seconds; current allocated memory: 192.039 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.058 seconds; current allocated memory: 971.541 MB.
INFO: [HLS 200-10] Analyzing design file 'src/LeNet5.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/conv.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/linear.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/pool.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'src/softmax.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 15.73 seconds; current allocated memory: 193.784 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<48>::ap_int<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<32, true>::mult operator*<16, false, 32, true>(ap_int_base<16, false> const&, ap_int_base<32, true> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:339)
INFO: [HLS 214-131] Inlining function 'ap_int<80>::ap_int<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1345:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:483)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<32, true>::mult operator*<48, true, 32, true>(ap_int_base<48, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:481)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<80, true>(ap_int_base<80, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<81>::ap_int<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::ap_int_base<48, true>(ap_int_base<48, true> const&)' into 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<81, true>(ap_int_base<81, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<82>::ap_int<82, true>(ap_int_base<82, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1006)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<32, true>::plus operator+<81, true, 32, true>(ap_int_base<81, true> const&, ap_int_base<32, true> const&)' into 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:1004)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:40:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:33)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:44:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer0(float*, float*, float*, float*)' (src/conv.cpp:41:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:339)
INFO: [HLS 214-131] Inlining function 'ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:551)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::ap_int_base<16, false>(ap_int_base<16, false> const&)' into 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1346:427)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::ap_int_base(int)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:739)
INFO: [HLS 214-131] Inlining function 'ap_int_base<32, true>::RType<16, false>::plus operator+<32, true, 16, false>(ap_int_base<32, true> const&, ap_int_base<16, false> const&)' into 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' (E:/Downloadcache/Xilinx/Vitis_HLS/2020.2/common/technology/autopilot\ap_int_base.h:1461:777)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:34:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:39:37)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:38:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:81)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:77)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:71)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:68)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:45)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:39)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:41)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:35)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:36:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer0(float*, float*)' (src/pool.cpp:35:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:76:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:26)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:36)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:30)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:80:27)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'conv_layer1(float*, float*, float*, float*)' (src/conv.cpp:77:23)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:56:23)
INFO: [HLS 214-131] Inlining function 'ap_int_base<33, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:17)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::plus operator+<16, false>(int, ap_int_base<16, false> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:61:36)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:66)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:79)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:73)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:75)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:69)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:67)
INFO: [HLS 214-131] Inlining function 'ap_int_base<82, true>::operator long long() const' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:31)
INFO: [HLS 214-131] Inlining function 'ap_int_base<81, true>::RType<($_0)32, true>::plus operator+<81, true>(ap_int_base<81, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:44)
INFO: [HLS 214-131] Inlining function 'ap_int_base<80, true>::RType<48, true>::plus operator+<80, true, 48, true>(ap_int_base<80, true> const&, ap_int_base<48, true> const&)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:38)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:40)
INFO: [HLS 214-131] Inlining function 'ap_int_base<48, true>::RType<($_0)32, true>::mult operator*<48, true>(ap_int_base<48, true> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:34)
INFO: [HLS 214-131] Inlining function 'ap_int_base<16, false>::RType<($_0)32, true>::mult operator*<16, false>(ap_int_base<16, false> const&, int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:58:32)
INFO: [HLS 214-131] Inlining function 'ap_uint<16>::ap_uint(int)' into 'pool_layer1(float*, float*)' (src/pool.cpp:57:23)
INFO: [HLS 214-178] Inlining function 'conv_layer0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer0(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'conv_layer1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'pool_layer1(float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc0(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'linear_fc1(float*, float*, float*, float*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-178] Inlining function 'fmax(float*, int*)' into 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
WARNING: [HLS 214-205] The INTERFACE pragma must have a max_widen_bitwidth setting that is both a power of 2 and in the range [0, 1024]. The current value of '0' will be ignored, in 'lenet5(float*, float*, float*, float*, float*, float*, float*, float*, float*, float*, int*)' (src/LeNet5.cpp:14:0)
INFO: [HLS 214-115] Multiple burst writes of length 10 and bit width 32 in loop 'VITIS_LOOP_51_1'(src/linear.cpp:51:19) has been inferred on port 'gmem' (src/linear.cpp:51:19)
INFO: [HLS 214-115] Multiple burst reads of length 9 and bit width 32 in loop 'VITIS_LOOP_11_1'(src/softmax.cpp:11:19) has been inferred on port 'gmem' (src/softmax.cpp:11:19)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 3.854 seconds; current allocated memory: 196.211 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.053 seconds; current allocated memory: 196.212 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 11.674 seconds; current allocated memory: 204.563 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 11.79 seconds; current allocated memory: 209.346 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_78_6' in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_4' (src/linear.cpp:19) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_54_2' (src/linear.cpp:49) in function 'lenet5' automatically.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_11_1' (src/softmax.cpp:8) in function 'lenet5' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_34_3' (src/conv.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_27_3' (src/pool.cpp:29) in function 'lenet5' for pipelining.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_49_3' (src/pool.cpp:51) in function 'lenet5' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_37_4' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_38_5' (src/conv.cpp:29) in function 'lenet5' completely with a factor of 5.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_30_4' (src/pool.cpp:29) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_31_5' in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_52_4' (src/pool.cpp:51) in function 'lenet5' completely with a factor of 2.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_53_5' in function 'lenet5' completely with a factor of 2.
INFO: [XFORM 203-11] Balancing expressions in function 'lenet5' (src/LeNet5.cpp:3)...7 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 6 seconds. CPU system time: 0 seconds. Elapsed time: 12.145 seconds; current allocated memory: 237.769 MB.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_33_2' (src/conv.cpp:33:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_32_1' (src/conv.cpp:32:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_26_2' (src/pool.cpp:26:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_1' (src/pool.cpp:25:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_74_5' in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_73_4' (src/conv.cpp:65:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_70_3' (src/conv.cpp:65:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_69_2' (src/conv.cpp:69:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_68_1' (src/conv.cpp:68:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_48_2' (src/pool.cpp:48:28) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_47_1' (src/pool.cpp:47:27) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_25_3' (src/linear.cpp:19:12) in function 'lenet5'.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_24_2' (src/linear.cpp:19:12) in function 'lenet5'.
WARNING: [HLS 200-960] Cannot flatten loop 'VITIS_LOOP_21_1' (src/linear.cpp:19:12) in function 'lenet5' the outer loop is not a perfect loop because there is nontrivial logic in the loop latch.
INFO: [XFORM 203-541] Flattening a loop nest 'VITIS_LOOP_51_1' (src/linear.cpp:49:12) in function 'lenet5'.
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv0' (src/conv.cpp:54:44)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool0' (src/pool.cpp:39:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_conv1' (src/conv.cpp:90:43)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_pool1' (src/pool.cpp:61:42)
INFO: [HLS 200-472] Inferring partial write operation for 'feature_out_fc0' (src/linear.cpp:39:21)
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 4 seconds. CPU system time: 0 seconds. Elapsed time: 8.839 seconds; current allocated memory: 242.286 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'lenet5' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv1'. Use bind_storage pragma to overwrite if needed.
INFO: [HLS 200-1457] Automatically inferring 1WnR RAM type for array 'feature_out_conv0'. Use bind_storage pragma to overwrite if needed.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'.
WARNING: [HLS 200-885] Unable to schedule bus request on port 'gmem' (src/conv.cpp:32) due to limited memory ports. Please consider using a memory core with more ports or partitioning the array.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 51, Depth = 172, loop 'VITIS_LOOP_32_1_VITIS_LOOP_33_2_VITIS_LOOP_34_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 11, loop 'VITIS_LOOP_25_1_VITIS_LOOP_26_2_VITIS_LOOP_27_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 19, loop 'VITIS_LOOP_73_4_VITIS_LOOP_74_5_VITIS_LOOP_78_6'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 10, loop 'VITIS_LOOP_47_1_VITIS_LOOP_48_2_VITIS_LOOP_49_3'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 18, loop 'VITIS_LOOP_24_2_VITIS_LOOP_25_3_VITIS_LOOP_27_4'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'.
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'): Unable to enforce a carried dependence constraint (II = 1, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:57) and 'select' operation ('select_ln51_1', src/linear.cpp:51).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'): Unable to enforce a carried dependence constraint (II = 2, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:57) and 'select' operation ('select_ln51_1', src/linear.cpp:51).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:57) and 'select' operation ('select_ln51_1', src/linear.cpp:51).
WARNING: [HLS 200-880] The II Violation in module 'lenet5' (loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'): Unable to enforce a carried dependence constraint (II = 4, distance = 1, offset = 1) between 'fadd' operation ('sum', src/linear.cpp:57) and 'select' operation ('select_ln51_1', src/linear.cpp:51).
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 5, Depth = 26, loop 'VITIS_LOOP_51_1_VITIS_LOOP_54_2'
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_11_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4, loop 'VITIS_LOOP_11_1'
WARNING: [HLS 200-871] Estimated clock period (9.901ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'lenet5' consists of the following:	'fcmp' operation ('tmp_42', src/softmax.cpp:13) [1433]  (4.2 ns)
	'and' operation ('and_ln13_1', src/softmax.cpp:13) [1434]  (0.8 ns)
	'select' operation ('max', src/softmax.cpp:13) [1435]  (0.705 ns)
	'phi' operation ('max') with incoming values : ('max', src/softmax.cpp:8) ('max', src/softmax.cpp:13) [1411]  (0 ns)
	'fcmp' operation ('tmp_42', src/softmax.cpp:13) [1433]  (4.2 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.831 seconds; current allocated memory: 246.641 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 1.637 seconds; current allocated memory: 253.054 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lenet5' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/gmem' to 'm_axi'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_conv1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc0' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/w_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/b_fc1' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_in' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/feature_out' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'lenet5/result' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'lenet5' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'w_conv0', 'b_conv0', 'w_conv1', 'b_conv1', 'w_fc0', 'b_fc0', 'w_fc1', 'b_fc1', 'feature_in', 'feature_out', 'result' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'fadd_32ns_32ns_32_5_full_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fcmp_32ns_32ns_1_2_no_dsp_1': 4 instance(s).
INFO: [RTGEN 206-100] Generating core module 'fmul_32ns_32ns_32_4_max_dsp_1': 1 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'lenet5'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1 seconds. CPU system time: 0 seconds. Elapsed time: 1.77 seconds; current allocated memory: 264.367 MB.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv0_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool0_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_conv1_ram (RAM_1WnR)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_pool1_ram (RAM)' using auto RAMs.
INFO: [RTMG 210-278] Implementing memory 'lenet5_feature_out_fc0_ram (RAM)' using auto RAMs.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 3 seconds. CPU system time: 1 seconds. Elapsed time: 5.669 seconds; current allocated memory: 290.356 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for lenet5.
INFO: [VLOG 209-307] Generating Verilog RTL for lenet5.
INFO: [HLS 200-1603] Design has MAXI bursts and missed bursts, see Vitis HLS GUI synthesis summary report for detailed information.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were NOT satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 101.00 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 25 seconds. CPU system time: 1 seconds. Elapsed time: 75.316 seconds; current allocated memory: 291.027 MB.
INFO: [HLS 200-112] Total CPU user time: 27 seconds. Total CPU system time: 1 seconds. Total elapsed time: 77.117 seconds; peak allocated memory: 971.541 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: cosim_design 
INFO: [COSIM 212-47] Using XSIM for RTL simulation.
INFO: [COSIM 212-14] Instrumenting C test bench ...
WARNING: [COSIM 212-369] AXI_master port 'w_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_conv1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc0' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'w_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'b_fc1' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_in' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'feature_out' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
WARNING: [COSIM 212-369] AXI_master port 'result' has a depth of '0'. Insufficient depth may result in simulation mismatch or freeze.
INFO: [COSIM 212-302] Starting C TB testing ... 
INFO: [COSIM 212-333] Generating C post check test bench ...
INFO: [COSIM 212-12] Generating RTL test bench ...
INFO: [COSIM 212-1] *** C/RTL co-simulation file generation completed. ***
INFO: [COSIM 212-323] Starting verilog simulation. 
INFO: [COSIM 212-15] Starting XSIM ...
INFO: [COSIM 212-316] Starting C post checking ...
INFO: [COSIM 212-1000] *** C/RTL co-simulation finished: PASS ***
INFO: [COSIM 212-211] II is measurable only when transaction number is greater than 1 in RTL simulation. Otherwise, they will be marked as all NA. If user wants to calculate them, please make sure there are at least 2 transactions in RTL simulation.
INFO: [HLS 200-111] Finished Command cosim_design CPU user time: 2 seconds. CPU system time: 1 seconds. Elapsed time: 403.088 seconds; current allocated memory: 200.461 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z100-ffg900-2'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z100-ffg900-2 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name lenet5 lenet5 
INFO: [HLS 200-1510] Running: export_design -rtl verilog -format ip_catalog 
INFO: [IMPL 213-8] Exporting RTL as a Vivado IP.
INFO: [HLS 200-802] Generated output file LeNet5_hls_proj/solution1/impl/export.zip
INFO: [HLS 200-111] Finished Command export_design CPU user time: 1 seconds. CPU system time: 1 seconds. Elapsed time: 16.51 seconds; current allocated memory: 201.190 MB.
